{"version":3,"sources":["../static/js/1.483adfd2.chunk.js","SearchDetail.js","api.js","../node_modules/babel-runtime/regenerator/index.js","../node_modules/regenerator-runtime/runtime-module.js","../node_modules/regenerator-runtime/runtime.js","cache.js","../node_modules/react-cache/index.js","../node_modules/react-cache/cjs/react-cache.production.min.js","util.js"],"names":["webpackJsonp","23","module","__webpack_exports__","__webpack_require__","Object","defineProperty","value","__WEBPACK_IMPORTED_MODULE_0_react__","__WEBPACK_IMPORTED_MODULE_0_react___default","n","__WEBPACK_IMPORTED_MODULE_1__api__","__WEBPACK_IMPORTED_MODULE_2__cache__","__WEBPACK_IMPORTED_MODULE_3__util__","abnLookupResource","createResource","abnLookup","_ref","id","entity","read","standardizeResult","a","createElement","className","name","abn","abnStatus","24","_asyncToGenerator","fn","gen","apply","this","arguments","Promise","resolve","reject","step","key","arg","info","error","done","then","err","d","acnLookup","nameLookup","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator__","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default","_this","proxy","window","location","hostname","origin","makeJSON","raw","JSON","parse","replace","makeCall","_callee","to","response","txt","wrap","_context","prev","next","fetch","mode","sent","text","abrupt","stop","_x","getGuid","search","split","_callee2","val","data","_context2","_x2","_ref2","_callee3","_context3","_x3","_ref3","_callee4","_context4","encodeURIComponent","Names","_x4","_ref4","25","exports","26","g","Function","hadRuntime","regeneratorRuntime","getOwnPropertyNames","indexOf","oldRuntime","undefined","e","27","global","innerFn","outerFn","self","tryLocsList","protoGenerator","prototype","Generator","generator","create","context","Context","_invoke","makeInvokeMethod","tryCatch","obj","type","call","GeneratorFunction","GeneratorFunctionPrototype","defineIteratorMethods","forEach","method","AsyncIterator","invoke","record","result","hasOwn","__await","unwrapped","enqueue","callInvokeWithMethodAndArg","previousPromise","state","GenStateSuspendedStart","GenStateExecuting","Error","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","_sent","dispatchException","GenStateSuspendedYield","iterator","return","TypeError","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","values","iterable","iteratorMethod","iteratorSymbol","isNaN","length","i","Op","hasOwnProperty","$Symbol","Symbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","inModule","runtime","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","Gp","constructor","displayName","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","async","iter","toString","keys","object","reverse","pop","skipTempReset","charAt","slice","rootEntry","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","28","initCache","cache","createCache","__WEBPACK_IMPORTED_MODULE_0_react_cache__","loadResource","hash","resource","createCacheResource","preload","29","30","l","h","c","b","f","get","map","Map","head","tail","size","set","status","suspender","previous","delete","invalidate","k","m","createContext","ReactCache","31","results","Array","isArray","Abn","EntityName","Name","AbnStatus"],"mappings":"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","file":"static/js/1.483adfd2.chunk.js","sourcesContent":["webpackJsonp([1],{\n\n/***/ 23:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__api__ = __webpack_require__(24);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__cache__ = __webpack_require__(28);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__util__ = __webpack_require__(31);\nvar abnLookupResource=Object(__WEBPACK_IMPORTED_MODULE_2__cache__[\"a\" /* createResource */])(__WEBPACK_IMPORTED_MODULE_1__api__[\"a\" /* abnLookup */]);/* harmony default export */ __webpack_exports__[\"default\"] = (function(_ref){var id=_ref.id;var entity=abnLookupResource.read(id);entity=Object(__WEBPACK_IMPORTED_MODULE_3__util__[\"a\" /* standardizeResult */])(entity)[0];return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"div\",{className:\"entityDetails\"},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"h1\",null,\"Name: \",entity.name),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"h2\",null,\"ABN: \",entity.abn),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"h3\",null,\"Status: \",entity.abnStatus));});\n\n/***/ }),\n\n/***/ 24:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return abnLookup; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return acnLookup; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return nameLookup; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator__ = __webpack_require__(25);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator__);\nvar _this=this;function _asyncToGenerator(fn){return function(){var gen=fn.apply(this,arguments);return new Promise(function(resolve,reject){function step(key,arg){try{var info=gen[key](arg);var value=info.value;}catch(error){reject(error);return;}if(info.done){resolve(value);}else{return Promise.resolve(value).then(function(value){step(\"next\",value);},function(err){step(\"throw\",err);});}}return step(\"next\");});};}var proxy=window.location.hostname==='localhost'||window.location.hostname==='0.0.0.0'?'http://'+window.location.hostname+':49160':window.location.origin;var makeJSON=function makeJSON(raw){return JSON.parse(raw.replace('callback(','').replace('})','}'));};var makeCall=function(){var _ref=_asyncToGenerator(/*#__PURE__*/__WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.mark(function _callee(to){var response,txt;return __WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(to,{mode:'cors'});case 2:response=_context.sent;_context.next=5;return response.text();case 5:txt=_context.sent;return _context.abrupt('return',txt);case 7:case'end':return _context.stop();}}},_callee,_this);}));return function makeCall(_x){return _ref.apply(this,arguments);};}();var getGuid=function getGuid(){return window.location.search.split('?guid=')[1];};var abnLookup=function(){var _ref2=_asyncToGenerator(/*#__PURE__*/__WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.mark(function _callee2(val){var data;return __WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return makeCall(proxy+'/proxy/https://abr.business.gov.au/json/AbnDetails.aspx?abn='+val+'&callback=callback&guid='+getGuid());case 2:data=_context2.sent;return _context2.abrupt('return',makeJSON(data));case 4:case'end':return _context2.stop();}}},_callee2,_this);}));return function abnLookup(_x2){return _ref2.apply(this,arguments);};}();var acnLookup=function(){var _ref3=_asyncToGenerator(/*#__PURE__*/__WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.mark(function _callee3(val){var data;return __WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return makeCall(proxy+'/proxy/https://abr.business.gov.au/json/AcnDetails.aspx?acn='+val+'&callback=callback&guid='+getGuid());case 2:data=_context3.sent;return _context3.abrupt('return',makeJSON(data));case 4:case'end':return _context3.stop();}}},_callee3,_this);}));return function acnLookup(_x3){return _ref3.apply(this,arguments);};}();var nameLookup=function(){var _ref4=_asyncToGenerator(/*#__PURE__*/__WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.mark(function _callee4(val){var data;return __WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.next=2;return makeCall(proxy+'/proxy/https://abr.business.gov.au/json/MatchingNames.aspx?name='+encodeURIComponent(val)+'&callback=callback&guid='+getGuid()+'&maxResults=10');case 2:data=_context4.sent;return _context4.abrupt('return',makeJSON(data).Names);case 4:case'end':return _context4.stop();}}},_callee4,_this);}));return function nameLookup(_x4){return _ref4.apply(this,arguments);};}();\n\n/***/ }),\n\n/***/ 25:\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(26);\n\n\n/***/ }),\n\n/***/ 26:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// This method of obtaining a reference to the global object needs to be\n// kept identical to the way it is obtained in runtime.js\nvar g = (function() { return this })() || Function(\"return this\")();\n\n// Use `getOwnPropertyNames` because not all browsers support calling\n// `hasOwnProperty` on the global `self` object in a worker. See #183.\nvar hadRuntime = g.regeneratorRuntime &&\n  Object.getOwnPropertyNames(g).indexOf(\"regeneratorRuntime\") >= 0;\n\n// Save the old regeneratorRuntime in case it needs to be restored later.\nvar oldRuntime = hadRuntime && g.regeneratorRuntime;\n\n// Force reevalutation of runtime.js.\ng.regeneratorRuntime = undefined;\n\nmodule.exports = __webpack_require__(27);\n\nif (hadRuntime) {\n  // Restore the original runtime.\n  g.regeneratorRuntime = oldRuntime;\n} else {\n  // Remove the global property added by runtime.js.\n  try {\n    delete g.regeneratorRuntime;\n  } catch(e) {\n    g.regeneratorRuntime = undefined;\n  }\n}\n\n\n/***/ }),\n\n/***/ 27:\n/***/ (function(module, exports) {\n\n/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n!(function(global) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  var inModule = typeof module === \"object\";\n  var runtime = global.regeneratorRuntime;\n  if (runtime) {\n    if (inModule) {\n      // If regeneratorRuntime is defined globally and we're in a module,\n      // make the exports object identical to regeneratorRuntime.\n      module.exports = runtime;\n    }\n    // Don't bother evaluating the rest of this file if the runtime was\n    // already defined globally.\n    return;\n  }\n\n  // Define the runtime globally (as expected by generated code) as either\n  // module.exports (if we're in a module) or a new, empty object.\n  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  runtime.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  runtime.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  runtime.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  runtime.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration. If the Promise is rejected, however, the\n          // result for this iteration will be rejected with the same\n          // reason. Note that rejections of yielded Promises are not\n          // thrown back into the generator function, as is the case\n          // when an awaited Promise is rejected. This difference in\n          // behavior between yield and await is important, because it\n          // allows the consumer to decide what to do with the yielded\n          // rejection (swallow it and continue, manually .throw it back\n          // into the generator, abandon iteration, whatever). With\n          // await, by contrast, there is no opportunity to examine the\n          // rejection reason outside the generator function, so the\n          // only option is to throw it from the await expression, and\n          // let the generator function handle the exception.\n          result.value = unwrapped;\n          resolve(result);\n        }, reject);\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  runtime.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  runtime.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return runtime.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        if (delegate.iterator.return) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  runtime.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  runtime.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n})(\n  // In sloppy mode, unbound `this` refers to the global object, fallback to\n  // Function constructor if we're in global strict mode. That is sadly a form\n  // of indirect eval which violates Content Security Policy.\n  (function() { return this })() || Function(\"return this\")()\n);\n\n\n/***/ }),\n\n/***/ 28:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return createResource; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react_cache__ = __webpack_require__(29);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react_cache___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react_cache__);\nvar cache=void 0;function initCache(){cache=Object(__WEBPACK_IMPORTED_MODULE_0_react_cache__[\"createCache\"])(initCache);}initCache();var createResource=function createResource(loadResource,hash){var resource=Object(__WEBPACK_IMPORTED_MODULE_0_react_cache__[\"createResource\"])(loadResource,hash);return{read:function read(key){return resource.read(cache,key);},preload:function preload(key){return resource.preload(cache,key);}};};\n\n/***/ }),\n\n/***/ 29:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nif (true) {\n  module.exports = __webpack_require__(30);\n} else {\n  module.exports = require('./cjs/react-cache.development.js');\n}\n\n\n/***/ }),\n\n/***/ 30:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/** @license React v16.6.0-alpha.8af6728\n * react-cache.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nObject.defineProperty(exports,\"__esModule\",{value:!0});var k=__webpack_require__(0);\nfunction l(h){function g(a,c){var b=f.get(a);void 0===b&&(b={map:new Map,head:null,tail:null,size:0},f.set(a,b));var d=b.map;a=d.get(c);if(void 0===a){if(a={status:0,suspender:null,key:c,value:null,error:null,next:null,previous:null},d.set(c,a),500<=b.size&&(c=b.tail,null!==c)){for(var e=0;50>e&&null!==c;e++)--b.size,d.delete(c.key),c=c.previous;b.tail=c;null!==c&&(c.next=null)}}else d=a.previous,c=a.next,null!==d?d.next=c:b.head=c,null!==c?c.previous=d:b.tail=d,--b.size;d=b.head;b.head=a;a.previous=\nnull;a.next=d;null!==d?d.previous=a:b.tail=a;b.size+=1;return a}function e(a,c){a.status=1;a.suspender=c;c.then(function(b){a.status=2;a.suspender=null;a.value=b},function(b){a.status=3;a.suspender=null;a.error=b})}var f=new Map;return{invalidate:function(){h()},preload:function(a,c,b,d){a=g(a,c);switch(a.status){case 0:b=b(d),e(a,b)}},read:function(a,c,b,d){a=g(a,c);switch(a.status){case 0:throw b=b(d),e(a,b),b;case 1:throw a.suspender;case 2:return a.value;default:throw a.error;}}}}\nvar m=l(function(){}),n=k.createContext(m);exports.createCache=l;exports.createResource=function(h,g){var e={read:function(f,a){if(void 0===g)return f.read(e,a,h,a);var c=g(a);return f.read(e,c,h,a)},preload:function(f,a){if(void 0===g)f.preload(e,a,h,a);else{var c=g(a);f.preload(e,c,h,a)}}};return e};exports.ReactCache=n;\n\n\n/***/ }),\n\n/***/ 31:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return standardizeResult; });\n/* unused harmony export delay */\nvar standardizeResult=function standardizeResult(results){var adjusted=Array.isArray(results)?results:results.Abn===''?[]:[results];return adjusted.map(function(i){return{name:i.EntityName?i.EntityName:i.Name,abn:i.Abn,abnStatus:i.AbnStatus};});};var delay=function delay(duration){return new Promise(function(resolve){return setTimeout(resolve,duration);});};\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/1.483adfd2.chunk.js","import React from \"react\";\nimport { abnLookup } from \"./api\";\nimport { createResource } from \"./cache\";\nimport { standardizeResult } from './util';\n\nconst abnLookupResource = createResource(abnLookup);\n\nexport default ({ id }) => {\n  let entity = abnLookupResource.read(id);\n  entity = standardizeResult(entity)[0];\n\n  return (\n    <div className=\"entityDetails\">\n      <h1>Name: {entity.name}</h1>\n      <h2>ABN: {entity.abn}</h2>\n      <h3>Status: {entity.abnStatus}</h3>\n    </div>\n  );\n};\n\n\n// WEBPACK FOOTER //\n// ./src/SearchDetail.js","const proxy = (window.location.hostname === 'localhost' || window.location.hostname === '0.0.0.0') ? `http://${window.location.hostname}:49160` : window.location.origin;\n\nconst makeJSON = raw => JSON.parse(raw.replace('callback(', '').replace('})', '}'));\n\nconst makeCall = async to => {\n  const response = await fetch(to, { mode: 'cors' });\n  const txt = await response.text();\n  return txt;\n}\n\nconst getGuid = () => (window.location.search.split('?guid=')[1]);\n\nexport const abnLookup = async val => {\n  const data = await makeCall(`${proxy}/proxy/https://abr.business.gov.au/json/AbnDetails.aspx?abn=${val}&callback=callback&guid=${getGuid()}`);\n  return makeJSON(data);\n};\n\nexport const acnLookup = async val => {\n  const data = await makeCall(`${proxy}/proxy/https://abr.business.gov.au/json/AcnDetails.aspx?acn=${val}&callback=callback&guid=${getGuid()}`);\n  return makeJSON(data);\n};\n\nexport const nameLookup = async val => {\n  const data = await makeCall(`${proxy}/proxy/https://abr.business.gov.au/json/MatchingNames.aspx?name=${encodeURIComponent(val)}&callback=callback&guid=${getGuid()}&maxResults=10`);\n  return makeJSON(data).Names;\n};\n\n\n// WEBPACK FOOTER //\n// ./src/api.js","module.exports = require(\"regenerator-runtime\");\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/babel-runtime/regenerator/index.js\n// module id = 25\n// module chunks = 0 1","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// This method of obtaining a reference to the global object needs to be\n// kept identical to the way it is obtained in runtime.js\nvar g = (function() { return this })() || Function(\"return this\")();\n\n// Use `getOwnPropertyNames` because not all browsers support calling\n// `hasOwnProperty` on the global `self` object in a worker. See #183.\nvar hadRuntime = g.regeneratorRuntime &&\n  Object.getOwnPropertyNames(g).indexOf(\"regeneratorRuntime\") >= 0;\n\n// Save the old regeneratorRuntime in case it needs to be restored later.\nvar oldRuntime = hadRuntime && g.regeneratorRuntime;\n\n// Force reevalutation of runtime.js.\ng.regeneratorRuntime = undefined;\n\nmodule.exports = require(\"./runtime\");\n\nif (hadRuntime) {\n  // Restore the original runtime.\n  g.regeneratorRuntime = oldRuntime;\n} else {\n  // Remove the global property added by runtime.js.\n  try {\n    delete g.regeneratorRuntime;\n  } catch(e) {\n    g.regeneratorRuntime = undefined;\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/regenerator-runtime/runtime-module.js\n// module id = 26\n// module chunks = 0 1","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n!(function(global) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  var inModule = typeof module === \"object\";\n  var runtime = global.regeneratorRuntime;\n  if (runtime) {\n    if (inModule) {\n      // If regeneratorRuntime is defined globally and we're in a module,\n      // make the exports object identical to regeneratorRuntime.\n      module.exports = runtime;\n    }\n    // Don't bother evaluating the rest of this file if the runtime was\n    // already defined globally.\n    return;\n  }\n\n  // Define the runtime globally (as expected by generated code) as either\n  // module.exports (if we're in a module) or a new, empty object.\n  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  runtime.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  runtime.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  runtime.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  runtime.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration. If the Promise is rejected, however, the\n          // result for this iteration will be rejected with the same\n          // reason. Note that rejections of yielded Promises are not\n          // thrown back into the generator function, as is the case\n          // when an awaited Promise is rejected. This difference in\n          // behavior between yield and await is important, because it\n          // allows the consumer to decide what to do with the yielded\n          // rejection (swallow it and continue, manually .throw it back\n          // into the generator, abandon iteration, whatever). With\n          // await, by contrast, there is no opportunity to examine the\n          // rejection reason outside the generator function, so the\n          // only option is to throw it from the await expression, and\n          // let the generator function handle the exception.\n          result.value = unwrapped;\n          resolve(result);\n        }, reject);\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  runtime.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  runtime.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return runtime.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        if (delegate.iterator.return) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  runtime.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  runtime.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n})(\n  // In sloppy mode, unbound `this` refers to the global object, fallback to\n  // Function constructor if we're in global strict mode. That is sadly a form\n  // of indirect eval which violates Content Security Policy.\n  (function() { return this })() || Function(\"return this\")()\n);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/regenerator-runtime/runtime.js\n// module id = 27\n// module chunks = 0 1","import {\n  createCache,\n  createResource as createCacheResource\n} from \"react-cache\";\n\nlet cache;\nfunction initCache() {\n  cache = createCache(initCache);\n}\ninitCache();\n\nexport const createResource = (loadResource, hash) => {\n  const resource = createCacheResource(loadResource, hash);\n  return {\n    read: key => resource.read(cache, key),\n    preload: key => resource.preload(cache, key)\n  };\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/cache.js","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-cache.production.min.js');\n} else {\n  module.exports = require('./cjs/react-cache.development.js');\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-cache/index.js\n// module id = 29\n// module chunks = 0 1","/** @license React v16.6.0-alpha.8af6728\n * react-cache.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';Object.defineProperty(exports,\"__esModule\",{value:!0});var k=require(\"react\");\nfunction l(h){function g(a,c){var b=f.get(a);void 0===b&&(b={map:new Map,head:null,tail:null,size:0},f.set(a,b));var d=b.map;a=d.get(c);if(void 0===a){if(a={status:0,suspender:null,key:c,value:null,error:null,next:null,previous:null},d.set(c,a),500<=b.size&&(c=b.tail,null!==c)){for(var e=0;50>e&&null!==c;e++)--b.size,d.delete(c.key),c=c.previous;b.tail=c;null!==c&&(c.next=null)}}else d=a.previous,c=a.next,null!==d?d.next=c:b.head=c,null!==c?c.previous=d:b.tail=d,--b.size;d=b.head;b.head=a;a.previous=\nnull;a.next=d;null!==d?d.previous=a:b.tail=a;b.size+=1;return a}function e(a,c){a.status=1;a.suspender=c;c.then(function(b){a.status=2;a.suspender=null;a.value=b},function(b){a.status=3;a.suspender=null;a.error=b})}var f=new Map;return{invalidate:function(){h()},preload:function(a,c,b,d){a=g(a,c);switch(a.status){case 0:b=b(d),e(a,b)}},read:function(a,c,b,d){a=g(a,c);switch(a.status){case 0:throw b=b(d),e(a,b),b;case 1:throw a.suspender;case 2:return a.value;default:throw a.error;}}}}\nvar m=l(function(){}),n=k.createContext(m);exports.createCache=l;exports.createResource=function(h,g){var e={read:function(f,a){if(void 0===g)return f.read(e,a,h,a);var c=g(a);return f.read(e,c,h,a)},preload:function(f,a){if(void 0===g)f.preload(e,a,h,a);else{var c=g(a);f.preload(e,c,h,a)}}};return e};exports.ReactCache=n;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-cache/cjs/react-cache.production.min.js\n// module id = 30\n// module chunks = 0 1","export const standardizeResult = (results) => {\n  const adjusted = Array.isArray(results) ? results : (results.Abn === '') ? [] : [results];\n\n  return adjusted.map(i => {\n    return {\n      name: (i.EntityName) ? i.EntityName : i.Name,\n      abn: i.Abn,\n      abnStatus: i.AbnStatus\n    }\n  })\n}\n\nexport const delay = (duration) =>\n  new Promise((resolve) => setTimeout(resolve, duration));\n\n\n// WEBPACK FOOTER //\n// ./src/util.js"],"sourceRoot":""}