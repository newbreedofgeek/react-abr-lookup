{"version":3,"sources":["../static/js/0.13c1bb2f.chunk.js","SearchResults.js","api.js","../node_modules/babel-runtime/regenerator/index.js","../node_modules/regenerator-runtime/runtime-module.js","../node_modules/regenerator-runtime/runtime.js","cache.js","../node_modules/react-cache/index.js","../node_modules/react-cache/cjs/react-cache.production.min.js","util.js"],"names":["webpackJsonp","22","module","__webpack_exports__","__webpack_require__","Object","defineProperty","value","__WEBPACK_IMPORTED_MODULE_0_react__","__WEBPACK_IMPORTED_MODULE_0_react___default","n","__WEBPACK_IMPORTED_MODULE_1__api__","__WEBPACK_IMPORTED_MODULE_2__cache__","__WEBPACK_IMPORTED_MODULE_3__Spinner__","__WEBPACK_IMPORTED_MODULE_4__util__","abnLookupResource","createResource","abnLookup","acnLookupResource","acnLookup","nameLookupResource","nameLookup","_ref","term","type","loadingId","onResultClick","results","standardizeResult","read","a","createElement","length","map","result","className","key","abn","Date","now","onClick","name","size","24","_asyncToGenerator","fn","gen","apply","this","arguments","Promise","resolve","reject","step","arg","info","error","done","then","err","d","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator__","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default","_this","proxy","window","location","hostname","origin","makeJSON","raw","JSON","parse","replace","makeCall","_callee","to","response","txt","wrap","_context","prev","next","fetch","mode","sent","text","abrupt","stop","_x","getGuid","search","split","_callee2","val","data","_context2","_x2","_ref2","_callee3","_context3","_x3","_ref3","_callee4","_context4","encodeURIComponent","Names","_x4","_ref4","25","exports","26","g","Function","hadRuntime","regeneratorRuntime","getOwnPropertyNames","indexOf","oldRuntime","undefined","e","27","global","innerFn","outerFn","self","tryLocsList","protoGenerator","prototype","Generator","generator","create","context","Context","_invoke","makeInvokeMethod","tryCatch","obj","call","GeneratorFunction","GeneratorFunctionPrototype","defineIteratorMethods","forEach","method","AsyncIterator","invoke","record","hasOwn","__await","unwrapped","enqueue","callInvokeWithMethodAndArg","previousPromise","state","GenStateSuspendedStart","GenStateExecuting","Error","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","_sent","dispatchException","GenStateSuspendedYield","iterator","return","TypeError","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","values","iterable","iteratorMethod","iteratorSymbol","isNaN","i","Op","hasOwnProperty","$Symbol","Symbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","inModule","runtime","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","Gp","constructor","displayName","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","async","iter","toString","keys","object","reverse","pop","skipTempReset","charAt","slice","rootEntry","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","28","initCache","cache","createCache","__WEBPACK_IMPORTED_MODULE_0_react_cache__","loadResource","hash","resource","createCacheResource","preload","29","30","l","h","c","b","f","get","Map","head","tail","set","status","suspender","previous","delete","invalidate","k","m","createContext","ReactCache","31","Array","isArray","Abn","EntityName","Name","abnStatus","AbnStatus"],"mappings":"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","file":"static/js/0.13c1bb2f.chunk.js","sourcesContent":["webpackJsonp([0],{\n\n/***/ 22:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__api__ = __webpack_require__(24);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__cache__ = __webpack_require__(28);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__Spinner__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__util__ = __webpack_require__(31);\nvar abnLookupResource=Object(__WEBPACK_IMPORTED_MODULE_2__cache__[\"a\" /* createResource */])(__WEBPACK_IMPORTED_MODULE_1__api__[\"a\" /* abnLookup */]);var acnLookupResource=Object(__WEBPACK_IMPORTED_MODULE_2__cache__[\"a\" /* createResource */])(__WEBPACK_IMPORTED_MODULE_1__api__[\"b\" /* acnLookup */]);var nameLookupResource=Object(__WEBPACK_IMPORTED_MODULE_2__cache__[\"a\" /* createResource */])(__WEBPACK_IMPORTED_MODULE_1__api__[\"c\" /* nameLookup */]);/* harmony default export */ __webpack_exports__[\"default\"] = (function(_ref){var term=_ref.term,type=_ref.type,loadingId=_ref.loadingId,onResultClick=_ref.onResultClick;var results=Object(__WEBPACK_IMPORTED_MODULE_4__util__[\"a\" /* standardizeResult */])(type==='abn'?abnLookupResource.read(term):type==='acn'?acnLookupResource.read(term):nameLookupResource.read(term));return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_0_react__[\"Fragment\"],null,results.length===0?__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"span\",null,\"Nothing found...\"):results.map(function(result){return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"div\",{className:\"entity\",key:result.abn+\"-\"+Date.now(),onClick:function onClick(){return onResultClick(result.abn);}},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"div\",{className:\"main\"},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"div\",{className:\"title\"},result.name),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"div\",{className:\"info\"},\"ABN: \"+result.abn)),loadingId!==result.abn&&__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"div\",{className:\"hover\"},'👉'),loadingId===result.abn&&__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"div\",{className:\"loading\"},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_3__Spinner__[\"a\" /* Spinner */],{size:\"small\"})));}));});\n\n/***/ }),\n\n/***/ 24:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return abnLookup; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return acnLookup; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return nameLookup; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator__ = __webpack_require__(25);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator__);\nvar _this=this;function _asyncToGenerator(fn){return function(){var gen=fn.apply(this,arguments);return new Promise(function(resolve,reject){function step(key,arg){try{var info=gen[key](arg);var value=info.value;}catch(error){reject(error);return;}if(info.done){resolve(value);}else{return Promise.resolve(value).then(function(value){step(\"next\",value);},function(err){step(\"throw\",err);});}}return step(\"next\");});};}var proxy=window.location.hostname==='localhost'||window.location.hostname==='0.0.0.0'?'http://'+window.location.hostname+':49160':window.location.origin;var makeJSON=function makeJSON(raw){return JSON.parse(raw.replace('callback(','').replace('})','}'));};var makeCall=function(){var _ref=_asyncToGenerator(/*#__PURE__*/__WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.mark(function _callee(to){var response,txt;return __WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(to,{mode:'cors'});case 2:response=_context.sent;_context.next=5;return response.text();case 5:txt=_context.sent;return _context.abrupt('return',txt);case 7:case'end':return _context.stop();}}},_callee,_this);}));return function makeCall(_x){return _ref.apply(this,arguments);};}();var getGuid=function getGuid(){return window.location.search.split('?guid=')[1];};var abnLookup=function(){var _ref2=_asyncToGenerator(/*#__PURE__*/__WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.mark(function _callee2(val){var data;return __WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return makeCall(proxy+'/proxy/https://abr.business.gov.au/json/AbnDetails.aspx?abn='+val+'&callback=callback&guid='+getGuid());case 2:data=_context2.sent;return _context2.abrupt('return',makeJSON(data));case 4:case'end':return _context2.stop();}}},_callee2,_this);}));return function abnLookup(_x2){return _ref2.apply(this,arguments);};}();var acnLookup=function(){var _ref3=_asyncToGenerator(/*#__PURE__*/__WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.mark(function _callee3(val){var data;return __WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return makeCall(proxy+'/proxy/https://abr.business.gov.au/json/AcnDetails.aspx?acn='+val+'&callback=callback&guid='+getGuid());case 2:data=_context3.sent;return _context3.abrupt('return',makeJSON(data));case 4:case'end':return _context3.stop();}}},_callee3,_this);}));return function acnLookup(_x3){return _ref3.apply(this,arguments);};}();var nameLookup=function(){var _ref4=_asyncToGenerator(/*#__PURE__*/__WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.mark(function _callee4(val){var data;return __WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.next=2;return makeCall(proxy+'/proxy/https://abr.business.gov.au/json/MatchingNames.aspx?name='+encodeURIComponent(val)+'&callback=callback&guid='+getGuid()+'&maxResults=10');case 2:data=_context4.sent;return _context4.abrupt('return',makeJSON(data).Names);case 4:case'end':return _context4.stop();}}},_callee4,_this);}));return function nameLookup(_x4){return _ref4.apply(this,arguments);};}();\n\n/***/ }),\n\n/***/ 25:\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(26);\n\n\n/***/ }),\n\n/***/ 26:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// This method of obtaining a reference to the global object needs to be\n// kept identical to the way it is obtained in runtime.js\nvar g = (function() { return this })() || Function(\"return this\")();\n\n// Use `getOwnPropertyNames` because not all browsers support calling\n// `hasOwnProperty` on the global `self` object in a worker. See #183.\nvar hadRuntime = g.regeneratorRuntime &&\n  Object.getOwnPropertyNames(g).indexOf(\"regeneratorRuntime\") >= 0;\n\n// Save the old regeneratorRuntime in case it needs to be restored later.\nvar oldRuntime = hadRuntime && g.regeneratorRuntime;\n\n// Force reevalutation of runtime.js.\ng.regeneratorRuntime = undefined;\n\nmodule.exports = __webpack_require__(27);\n\nif (hadRuntime) {\n  // Restore the original runtime.\n  g.regeneratorRuntime = oldRuntime;\n} else {\n  // Remove the global property added by runtime.js.\n  try {\n    delete g.regeneratorRuntime;\n  } catch(e) {\n    g.regeneratorRuntime = undefined;\n  }\n}\n\n\n/***/ }),\n\n/***/ 27:\n/***/ (function(module, exports) {\n\n/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n!(function(global) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  var inModule = typeof module === \"object\";\n  var runtime = global.regeneratorRuntime;\n  if (runtime) {\n    if (inModule) {\n      // If regeneratorRuntime is defined globally and we're in a module,\n      // make the exports object identical to regeneratorRuntime.\n      module.exports = runtime;\n    }\n    // Don't bother evaluating the rest of this file if the runtime was\n    // already defined globally.\n    return;\n  }\n\n  // Define the runtime globally (as expected by generated code) as either\n  // module.exports (if we're in a module) or a new, empty object.\n  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  runtime.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  runtime.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  runtime.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  runtime.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration. If the Promise is rejected, however, the\n          // result for this iteration will be rejected with the same\n          // reason. Note that rejections of yielded Promises are not\n          // thrown back into the generator function, as is the case\n          // when an awaited Promise is rejected. This difference in\n          // behavior between yield and await is important, because it\n          // allows the consumer to decide what to do with the yielded\n          // rejection (swallow it and continue, manually .throw it back\n          // into the generator, abandon iteration, whatever). With\n          // await, by contrast, there is no opportunity to examine the\n          // rejection reason outside the generator function, so the\n          // only option is to throw it from the await expression, and\n          // let the generator function handle the exception.\n          result.value = unwrapped;\n          resolve(result);\n        }, reject);\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  runtime.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  runtime.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return runtime.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        if (delegate.iterator.return) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  runtime.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  runtime.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n})(\n  // In sloppy mode, unbound `this` refers to the global object, fallback to\n  // Function constructor if we're in global strict mode. That is sadly a form\n  // of indirect eval which violates Content Security Policy.\n  (function() { return this })() || Function(\"return this\")()\n);\n\n\n/***/ }),\n\n/***/ 28:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return createResource; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react_cache__ = __webpack_require__(29);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react_cache___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react_cache__);\nvar cache=void 0;function initCache(){cache=Object(__WEBPACK_IMPORTED_MODULE_0_react_cache__[\"createCache\"])(initCache);}initCache();var createResource=function createResource(loadResource,hash){var resource=Object(__WEBPACK_IMPORTED_MODULE_0_react_cache__[\"createResource\"])(loadResource,hash);return{read:function read(key){return resource.read(cache,key);},preload:function preload(key){return resource.preload(cache,key);}};};\n\n/***/ }),\n\n/***/ 29:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nif (true) {\n  module.exports = __webpack_require__(30);\n} else {\n  module.exports = require('./cjs/react-cache.development.js');\n}\n\n\n/***/ }),\n\n/***/ 30:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/** @license React v16.6.0-alpha.8af6728\n * react-cache.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nObject.defineProperty(exports,\"__esModule\",{value:!0});var k=__webpack_require__(0);\nfunction l(h){function g(a,c){var b=f.get(a);void 0===b&&(b={map:new Map,head:null,tail:null,size:0},f.set(a,b));var d=b.map;a=d.get(c);if(void 0===a){if(a={status:0,suspender:null,key:c,value:null,error:null,next:null,previous:null},d.set(c,a),500<=b.size&&(c=b.tail,null!==c)){for(var e=0;50>e&&null!==c;e++)--b.size,d.delete(c.key),c=c.previous;b.tail=c;null!==c&&(c.next=null)}}else d=a.previous,c=a.next,null!==d?d.next=c:b.head=c,null!==c?c.previous=d:b.tail=d,--b.size;d=b.head;b.head=a;a.previous=\nnull;a.next=d;null!==d?d.previous=a:b.tail=a;b.size+=1;return a}function e(a,c){a.status=1;a.suspender=c;c.then(function(b){a.status=2;a.suspender=null;a.value=b},function(b){a.status=3;a.suspender=null;a.error=b})}var f=new Map;return{invalidate:function(){h()},preload:function(a,c,b,d){a=g(a,c);switch(a.status){case 0:b=b(d),e(a,b)}},read:function(a,c,b,d){a=g(a,c);switch(a.status){case 0:throw b=b(d),e(a,b),b;case 1:throw a.suspender;case 2:return a.value;default:throw a.error;}}}}\nvar m=l(function(){}),n=k.createContext(m);exports.createCache=l;exports.createResource=function(h,g){var e={read:function(f,a){if(void 0===g)return f.read(e,a,h,a);var c=g(a);return f.read(e,c,h,a)},preload:function(f,a){if(void 0===g)f.preload(e,a,h,a);else{var c=g(a);f.preload(e,c,h,a)}}};return e};exports.ReactCache=n;\n\n\n/***/ }),\n\n/***/ 31:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return standardizeResult; });\n/* unused harmony export delay */\nvar standardizeResult=function standardizeResult(results){var adjusted=Array.isArray(results)?results:results.Abn===''?[]:[results];return adjusted.map(function(i){return{name:i.EntityName?i.EntityName:i.Name,abn:i.Abn,abnStatus:i.AbnStatus};});};var delay=function delay(duration){return new Promise(function(resolve){return setTimeout(resolve,duration);});};\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/0.13c1bb2f.chunk.js","import React, { Fragment } from \"react\";\nimport { abnLookup, acnLookup, nameLookup } from \"./api\";\nimport { createResource } from \"./cache\";\nimport { Spinner } from './Spinner';\nimport { standardizeResult } from './util';\n\nconst abnLookupResource = createResource(abnLookup);\nconst acnLookupResource = createResource(acnLookup);\nconst nameLookupResource = createResource(nameLookup);\n\nexport default ({ term, type, loadingId, onResultClick }) => {\n  const results = standardizeResult(\n    (type === 'abn') ? abnLookupResource.read(term) : (type === 'acn' ? acnLookupResource.read(term) : nameLookupResource.read(term))\n  );\n\n  return (\n    <Fragment>\n      {results.length === 0 ? <span>Nothing found...</span> \n        : results.map((result) => (\n        <div\n          className=\"entity\"\n          key={`${result.abn}-${Date.now()}`}\n          onClick={() => onResultClick(result.abn)}\n        >\n          <div className=\"main\">\n            <div className=\"title\">{result.name}</div>\n            <div className=\"info\">{`ABN: ${result.abn}`}</div>\n          </div>\n          {loadingId !== result.abn && <div className=\"hover\">{'👉'}</div>}\n          {loadingId === result.abn && (\n            <div className=\"loading\">\n              <Spinner size=\"small\" />\n            </div>\n          )}\n        </div>\n      ))}\n    </Fragment>\n  );\n};\n\n\n// WEBPACK FOOTER //\n// ./src/SearchResults.js","const proxy = (window.location.hostname === 'localhost' || window.location.hostname === '0.0.0.0') ? `http://${window.location.hostname}:49160` : window.location.origin;\n\nconst makeJSON = raw => JSON.parse(raw.replace('callback(', '').replace('})', '}'));\n\nconst makeCall = async to => {\n  const response = await fetch(to, { mode: 'cors' });\n  const txt = await response.text();\n  return txt;\n}\n\nconst getGuid = () => (window.location.search.split('?guid=')[1]);\n\nexport const abnLookup = async val => {\n  const data = await makeCall(`${proxy}/proxy/https://abr.business.gov.au/json/AbnDetails.aspx?abn=${val}&callback=callback&guid=${getGuid()}`);\n  return makeJSON(data);\n};\n\nexport const acnLookup = async val => {\n  const data = await makeCall(`${proxy}/proxy/https://abr.business.gov.au/json/AcnDetails.aspx?acn=${val}&callback=callback&guid=${getGuid()}`);\n  return makeJSON(data);\n};\n\nexport const nameLookup = async val => {\n  const data = await makeCall(`${proxy}/proxy/https://abr.business.gov.au/json/MatchingNames.aspx?name=${encodeURIComponent(val)}&callback=callback&guid=${getGuid()}&maxResults=10`);\n  return makeJSON(data).Names;\n};\n\n\n// WEBPACK FOOTER //\n// ./src/api.js","module.exports = require(\"regenerator-runtime\");\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/babel-runtime/regenerator/index.js\n// module id = 25\n// module chunks = 0 1","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// This method of obtaining a reference to the global object needs to be\n// kept identical to the way it is obtained in runtime.js\nvar g = (function() { return this })() || Function(\"return this\")();\n\n// Use `getOwnPropertyNames` because not all browsers support calling\n// `hasOwnProperty` on the global `self` object in a worker. See #183.\nvar hadRuntime = g.regeneratorRuntime &&\n  Object.getOwnPropertyNames(g).indexOf(\"regeneratorRuntime\") >= 0;\n\n// Save the old regeneratorRuntime in case it needs to be restored later.\nvar oldRuntime = hadRuntime && g.regeneratorRuntime;\n\n// Force reevalutation of runtime.js.\ng.regeneratorRuntime = undefined;\n\nmodule.exports = require(\"./runtime\");\n\nif (hadRuntime) {\n  // Restore the original runtime.\n  g.regeneratorRuntime = oldRuntime;\n} else {\n  // Remove the global property added by runtime.js.\n  try {\n    delete g.regeneratorRuntime;\n  } catch(e) {\n    g.regeneratorRuntime = undefined;\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/regenerator-runtime/runtime-module.js\n// module id = 26\n// module chunks = 0 1","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n!(function(global) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  var inModule = typeof module === \"object\";\n  var runtime = global.regeneratorRuntime;\n  if (runtime) {\n    if (inModule) {\n      // If regeneratorRuntime is defined globally and we're in a module,\n      // make the exports object identical to regeneratorRuntime.\n      module.exports = runtime;\n    }\n    // Don't bother evaluating the rest of this file if the runtime was\n    // already defined globally.\n    return;\n  }\n\n  // Define the runtime globally (as expected by generated code) as either\n  // module.exports (if we're in a module) or a new, empty object.\n  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  runtime.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  runtime.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  runtime.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  runtime.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration. If the Promise is rejected, however, the\n          // result for this iteration will be rejected with the same\n          // reason. Note that rejections of yielded Promises are not\n          // thrown back into the generator function, as is the case\n          // when an awaited Promise is rejected. This difference in\n          // behavior between yield and await is important, because it\n          // allows the consumer to decide what to do with the yielded\n          // rejection (swallow it and continue, manually .throw it back\n          // into the generator, abandon iteration, whatever). With\n          // await, by contrast, there is no opportunity to examine the\n          // rejection reason outside the generator function, so the\n          // only option is to throw it from the await expression, and\n          // let the generator function handle the exception.\n          result.value = unwrapped;\n          resolve(result);\n        }, reject);\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  runtime.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  runtime.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return runtime.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        if (delegate.iterator.return) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  runtime.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  runtime.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n})(\n  // In sloppy mode, unbound `this` refers to the global object, fallback to\n  // Function constructor if we're in global strict mode. That is sadly a form\n  // of indirect eval which violates Content Security Policy.\n  (function() { return this })() || Function(\"return this\")()\n);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/regenerator-runtime/runtime.js\n// module id = 27\n// module chunks = 0 1","import {\n  createCache,\n  createResource as createCacheResource\n} from \"react-cache\";\n\nlet cache;\nfunction initCache() {\n  cache = createCache(initCache);\n}\ninitCache();\n\nexport const createResource = (loadResource, hash) => {\n  const resource = createCacheResource(loadResource, hash);\n  return {\n    read: key => resource.read(cache, key),\n    preload: key => resource.preload(cache, key)\n  };\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/cache.js","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-cache.production.min.js');\n} else {\n  module.exports = require('./cjs/react-cache.development.js');\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-cache/index.js\n// module id = 29\n// module chunks = 0 1","/** @license React v16.6.0-alpha.8af6728\n * react-cache.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';Object.defineProperty(exports,\"__esModule\",{value:!0});var k=require(\"react\");\nfunction l(h){function g(a,c){var b=f.get(a);void 0===b&&(b={map:new Map,head:null,tail:null,size:0},f.set(a,b));var d=b.map;a=d.get(c);if(void 0===a){if(a={status:0,suspender:null,key:c,value:null,error:null,next:null,previous:null},d.set(c,a),500<=b.size&&(c=b.tail,null!==c)){for(var e=0;50>e&&null!==c;e++)--b.size,d.delete(c.key),c=c.previous;b.tail=c;null!==c&&(c.next=null)}}else d=a.previous,c=a.next,null!==d?d.next=c:b.head=c,null!==c?c.previous=d:b.tail=d,--b.size;d=b.head;b.head=a;a.previous=\nnull;a.next=d;null!==d?d.previous=a:b.tail=a;b.size+=1;return a}function e(a,c){a.status=1;a.suspender=c;c.then(function(b){a.status=2;a.suspender=null;a.value=b},function(b){a.status=3;a.suspender=null;a.error=b})}var f=new Map;return{invalidate:function(){h()},preload:function(a,c,b,d){a=g(a,c);switch(a.status){case 0:b=b(d),e(a,b)}},read:function(a,c,b,d){a=g(a,c);switch(a.status){case 0:throw b=b(d),e(a,b),b;case 1:throw a.suspender;case 2:return a.value;default:throw a.error;}}}}\nvar m=l(function(){}),n=k.createContext(m);exports.createCache=l;exports.createResource=function(h,g){var e={read:function(f,a){if(void 0===g)return f.read(e,a,h,a);var c=g(a);return f.read(e,c,h,a)},preload:function(f,a){if(void 0===g)f.preload(e,a,h,a);else{var c=g(a);f.preload(e,c,h,a)}}};return e};exports.ReactCache=n;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-cache/cjs/react-cache.production.min.js\n// module id = 30\n// module chunks = 0 1","export const standardizeResult = (results) => {\n  const adjusted = Array.isArray(results) ? results : (results.Abn === '') ? [] : [results];\n\n  return adjusted.map(i => {\n    return {\n      name: (i.EntityName) ? i.EntityName : i.Name,\n      abn: i.Abn,\n      abnStatus: i.AbnStatus\n    }\n  })\n}\n\nexport const delay = (duration) =>\n  new Promise((resolve) => setTimeout(resolve, duration));\n\n\n// WEBPACK FOOTER //\n// ./src/util.js"],"sourceRoot":""}